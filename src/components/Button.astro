---
export interface Props {
  variant?: 'primary' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
}

const {
  variant = 'primary',
  size = 'md',
  href,
  type = 'button',
  disabled = false,
  class: className = ''
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-all duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-gray-900 disabled:opacity-50 disabled:cursor-not-allowed';

const variantClasses = {
  primary: 'bg-cyan-500 hover:bg-cyan-600 text-white focus-visible:ring-cyan-500',
  ghost: 'bg-transparent border border-gray-700 hover:bg-gray-800 text-gray-300 hover:text-white focus-visible:ring-gray-500'
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-lg'
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{type === 'submit' || type === 'reset' ? (
  <button type={type} class={classes} disabled={disabled}>
    <slot />
  </button>
) : href ? (
  <a href={href} class={classes} role="button" tabindex="0">
    <slot />
  </a>
) : (
  <button type={type} class={classes} disabled={disabled}>
    <slot />
  </button>
)}

